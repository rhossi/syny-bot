name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
env:
    ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    ECR_REPOSITORY: syny

jobs:

  build:

    runs-on: self-hosted

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Pull Docker Image from ECR and run on EC2
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
          set -e
          echo 'Pulling the Docker image...'
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG &&
          
          echo 'Stopping the existing container (if any)...'
          docker stop fastapi-container || true &&
          
          echo 'Removing the existing container (if any)...'
          docker rm fastapi-container || true &&
          
          echo 'Starting the new container...'
          docker run -d --name fastapi-container -p 8080:8080 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG